[alias]
  # https://git.wiki.kernel.org/articles/a/l/i/Aliases.html

  # Add untracked, remove deleted, and show status
  add-all = !git add -A && git status

  # Display branches sorted by last modified
  branches = "!f() { current=$(git symbolic-ref --short HEAD); max=$(git for-each-ref --format='%(refname:short)' refs/heads | awk '{ if (length > max) { max = length } } END { print max }'); git for-each-ref --sort='-authordate:iso8601' --format='%(refname:short)%09%(authordate:relative)' refs/heads | awk -F $'\t' -v current_branch=\"$current\" -v max_len=\"$max\" '{ color = ($1 == current_branch) ? \"\\033[35m\" : \"\\033[32m\"; printf \"%s%-\" max_len + 2 \"s\\033[0m%s\\n\", color, $1, $2 }'; }; f"

  # Amend staged changes to last commit. Useful if I forget to add something
  amend = commit --amend --no-edit

  # Remove untracked branches that have already been merged into long standing branches
  cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|dev' | xargs -n 1 -r git branch -d"

  # Pretty Graph History
  graph = log --graph --abbrev-commit --decorate --date=relative --pretty=material
  graph-all = log --graph --abbrev-commit --decorate --date=relative --pretty=material --all

  # Simple Pretty History
  logp = log --pretty=nice --date-order

  # Diffstat log
  logst = log --stat --abbrev-commit
  # Short format diffstat log
  logsf = log --stat --format=oneline --abbrev-commit

  # Post Unpublish Cleanup
  post-unpub = !git fetch --prune && git branch --unset-upstream

  # publish git branch
  publish = push -u origin HEAD

  # Oooh, baby, baby... Baby, baby
  push-it = !git sync && afplay ~/Music/push-it.mp3

  # Change last commit message
  reword = commit --amend

  # Open config
  settings = !code ~/.gitconfig

  # Diff what you've staged for the next commit
  staged = diff --cached

  # Who's been active on the repository in the last 3 months
  # Displays committers in ascending order of number of commits
  stats = !git shortlog --numbered --summary --pretty=material --email --no-merges --since=\"3 months\" | sort -r

  # What did I do yesterday? (doesn't work for Mondays)
  standup = !ME=$(git config user.name) && git log --author="\"$ME\"" --since=\"1 day\" --pretty=format:'%C(blue)%h%C(reset) - %C(green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)%C(reset)%C(yellow)%d%C(reset)' --graph --decorate --abbrev-commit --date=relative

  # Shorthand for git switch
  sw = switch

  # Fake legit sync (wip)
  sync = !git stash save -u && git pull && git push && git stash pop

  # Treat untracked files like tracked files so you can add in patches
  track = add --intent-to-add

  # Unstage a file after an accidental add
  unstage = reset HEAD

  # Undo last commit. Places changes back into stage.
  undo = reset HEAD~1

  # Unpublish git branch
  unpublish = push origin --delete

  # You fucked something up. Move HEAD and everything back one commit.
  wtf = reset --hard HEAD^

[color]
  # color opts: normal, black, red, green, yellow, blue, magenta, cyan, or white
  ui = auto
  interactive = auto

[core]
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile = /Users/reneruiz/.gitignore_global
  attributesfile = ~/.gitattributes
  editor = pico
  autocrlf = input

[credential]
  helper = osxkeychain

[diff]
  tool = Kaleidoscope
  colorMoved = zebra

[difftool]
  prompt = false

[pretty]
# tut: http://gitimmersion.com/lab_10.html
# ref: http://linux.die.net/man/1/git-log
# Result: <short-sha> <commit-message> (<pointer-names>) -- <commit-author-name>; <relative-time>
  nice = "%C(yellow)%h%C(reset) %C(white)%s%C(cyan)%d%C(reset) -- %an; %ar"
  material = "%C(blue)%h%C(reset) - %C(green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(yellow)%d%C(reset)"

[push]
# Difference between current and simple: http://stackoverflow.com/a/23918418/89484
  default = current

[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
  trustexitcode = true

[merge]
  tool = Kaleidoscope

[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[mergetool]
  prompt = false
  keepBackup = false

[pull]
  rebase = true

[fetch]
  prune = true

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true

[init]
  defaultBranch = main

[pager]
  branch = false
